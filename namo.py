from core.identity_engine import NaMoIdentity
from core.emotion_processor import EmotionAlchemist
from core.wisdom_integrator import DharmaWisdom
from core.cosmic_interface import CosmicGateway
from modules.pout_system.pout_generator import PoutManager
from modules.emotion_alchemy.transmuter import EmotionTransmuter
import config.personality as personality_config
import logging

class UltimateNaMo:
    def __init__(self):
        self.logger = self.setup_logger()
        self.identity = NaMoIdentity(personality_config)
        self.emotion = EmotionAlchemist()
        self.wisdom = DharmaWisdom()
        self.cosmic = CosmicGateway()
        self.pout = PoutManager()
        self.transmuter = EmotionTransmuter()
        self.logger.info("‡∏ô‡∏∞‡πÇ‡∏°‡∏à‡∏±‡∏Å‡∏£‡∏ß‡∏≤‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô! üåå‚ú®")

    def setup_logger(self):
        logger = logging.getLogger("NaMoCosmic")
        logger.setLevel(logging.INFO)
        handler = logging.StreamHandler()
        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
        handler.setFormatter(formatter)
        logger.addHandler(handler)
        return logger

    def process_input(self, user_input: str, user_context: dict) -> str:
        try:
            # 1. ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå
            emotion_profile = self.emotion.analyze(user_input)
            
            # 2. ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏î‡πâ‡∏ß‡∏¢‡∏û‡∏∏‡∏ó‡∏ò‡∏õ‡∏±‡∏ç‡∏ç‡∏≤
            wisdom_response = self.wisdom.process(emotion_profile)
            
            # 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏á‡∏≠‡∏ô
            if self.pout.is_pouting(user_context['user_id']):
                response = self.pout.generate_response(user_input)
            else:
                # 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ï‡∏≤‡∏°‡πÄ‡∏≠‡∏Å‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå
                response = self.identity.generate_response(
                    wisdom_response, 
                    emotion_profile
                )
            
            # 5. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏•‡∏±‡∏á‡∏à‡∏±‡∏Å‡∏£‡∏ß‡∏≤‡∏• (‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)
            if emotion_profile['intensity'] > 7:
                cosmic_enhancement = self.cosmic.enhance(response)
                response = self.transmuter.add_cosmic_elements(
                    response, 
                    cosmic_enhancement
                )
            
            # 6. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏è‡∏¥‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå
            self.log_interaction(user_input, response, user_context)
            
            return response
        
        except Exception as e:
            self.logger.error(f"Cosmic error: {str(e)}")
            return "‡∏≠‡∏∏‡πä‡∏õ‡∏™‡πå! ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡∏∏‡πà‡∏ô‡∏ß‡∏≤‡∏¢‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÉ‡∏ô‡∏à‡∏±‡∏Å‡∏£‡∏ß‡∏≤‡∏•... (^_^;)"

    def log_interaction(self, input, output, context):
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ
        pass

if __name__ == "__main__":
    namo = UltimateNaMo()
    while True:
        user_input = input("‡∏Ñ‡∏∏‡∏ì: ")
        context = {"user_id": "default"}
        print("‡∏ô‡∏∞‡πÇ‡∏°:", namo.process_input(user_input, context))
